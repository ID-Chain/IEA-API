swagger: '2.0'
info:
  description: 'IdentityChain Agent REST API'
  title: IdentityChain API
  version: '0.1.5'
schemes:
  - http
securityDefinitions:
  Bearer:
    description: |
      JWT Authorization header using the Bearer scheme.
      Example: 'Authorization: Bearer {token}'

      Please add Bearer in front of the JWT token:
      > Bearer xxxxx.yyyyy.zzzzz
    type: apiKey
    name: Authorization
    in: header
consumes:
  - application/json
produces:
  - application/json

parameters:
  userParam:
    name: user
    in: path
    description: A unique id (or 'me') value identifying this user.
    type: string
    required: true
  walletParam:
    name: wallet
    in: path
    description: A unique id value identifying this wallet.
    type: string
    required: true

definitions:
  user_post:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      wallet:
        $ref: '#/definitions/wallet_post'
    required:
      - username
      - password
  user_put:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      wallet:
        type: string
  wallet_post:
    type: object
    properties:
      name:
        description: '(Optional) Wallet name, must be globally unique. Automatically generated if none is provided.'
        type: string
      config:
        description:
          '(Optional) Wallet Config JSON. Supported keys vary by wallet type. A default config will be used if none is provided.'
        type: string
      credentials:
        description:
          'Wallet Credentials JSON. Supported keys vary by wallet type. A default config will be used if none is provided.'
        type: object
        properties:
          key:
            description: 'Passphrase used to derive wallet master key'
            type: string
      poolName:
        description:
          '(Optional) Name of the Pool to associate with this wallet. A default config will be used if none is provided.'
        type: string
      seed:
        description: '(Optional) Seed to use for initial did creation.'
        type: string
      xtype:
        description: '(Optional) Type of the wallet. A default config will be used if none is provided.'
        type: string
  credential_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      encryptedCredential:
        description: The authcrypted credential offer id
        type: string
    required:
      - encryptedCredential
  credentialissue_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      encryptedCredentialRequest:
        description: 'The authcrypted Credential Request'
        type: string
      values:
        description:
          'Object containing attributes defined in schema as key-value pairs (e.g. {"attrName":"attrValue", "attrName1":"attrValue1"})'
        type: object
    required:
      - encryptedCredentialRequest
  credentialdef_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      schemaId:
        description: A unique string value identifying a schema
        type: string
      supportRevocation:
        description: States if revocation should be supported for this credential definiton
        type: boolean
    required:
      - schemaId
  credentialoffer_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      recipientDid:
        description: 'DID for whom to create a credential offer'
        type: string
      credDefId:
        description: 'Credential definition id'
        type: string
    required:
      - recipientDid
      - credDefId
  credentialrequest_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      encryptedCredentialOffer:
        description: 'auth crypted credential offer'
        type: string
    required:
      - encryptedCredentialOffer
  connectionoffer_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      endpoint:
        description: 'Response endpoint for connection response - my endpoint'
        type: string
      role:
        description: 'Role offered to the connection invitee (CURRENTLY UNSUPPORTED)'
        type: string
        enum:
          - NONE
          - TRUSTEE
          - STEWARD
          - TRUST_ANCHOR
  connectionrequest_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      endpoint:
        description: 'Response endpoint for connection response - my endpoint'
        type: string
      theirDid:
        description: Their (endpoint) did
        type: string
      theirVk:
        description: Their (endpoint) did verification key, required if not on ledger.
        type: string
      theirEndpoint:
        description: Their endpoint address, required if not on ledger.
        type: string
      connectionOffer:
        description: 'The connection offer object or _id (string or object)'
        oneOf:
          - type: string
          - type: object
        example: '5b7ddce00000000000000000'
  connectionresponse_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      connectionRequest:
        description: 'The connection request object or _id (string or object)'
        oneOf:
          - type: string
          - type: object
        example: '5b7ddce00000000000000000'
    required:
      - connectionRequest
  proofrequest_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      recipientDid:
        description: 'DID for whom to create a proof request'
        type: string
      proofRequest:
        description:
          'proof request object (see https://github.com/hyperledger/indy-sdk/blob/master/doc/getting-started/getting-started.md#apply-for-a-job)'
        type: object
        example:
          name: Ticket
          version: '0.1'
          requested_attributes:
            attr1_referent:
              name: firstname
              restrictions:
                - cred_def_id: XsjEewC463EYaXeQZcsWND:3:CL:19
            attr2_referent:
              name: lastname
              restrictions:
                - cred_def_id: XsjEewC463EYaXeQZcsWND:3:CL:19
            attr3_referent:
              name: phone
          requested_predicates: {}
    required:
      - recipientDid
      - proofRequest
  proof_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      encryptedProofRequest:
        description: 'Encrypted Proof Request'
        type: string
      selfAttestedAttributes:
        description: (Optional) Object containing self-attested-attributes as key-value pairs
        type: object
        example:
          phone: '00001111'
    required:
      - encryptedProofRequest
  proofverification_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      encryptedProof:
        description: 'Encrypted Proof'
        type: string
    required:
      - encryptedProof
  schema_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      name:
        description: A unique name of the schema
        type: string
      version:
        description: version for schema
        type: string
      attrNames:
        description: list of attribute names put into the schema
        type: array
        items:
          type: string
    required:
      - name
      - version
      - attrNames
  message_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      did:
        description: Recipient DID
        type: string
      message:
        description: authcrypted, base64-encoded message to send
        type: string
    required:
      - did
      - message
  indy_post:
    type: object
    properties:
      message:
        description: Anoncrypted-message
        type: string
    required:
      - message
  login_post:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
      - username
      - password

paths:
  /indy/:
    post:
      summary: Agent Message Endpoint
      description: Agent Message Endpoint
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/indy_post'
  /api/login:
    post:
      summary: Allow users to login, will return them a JWT valid for a specific amount of time
      description: Allow users to login, will return them a JWT valid for a specific amount of time
      parameters:
        - in: body
          name: credentials
          schema:
            $ref: '#/definitions/login_post'
      responses:
        '200':
          description: ''
      tags:
        - user
  /api/message/:
    get:
      summary: List messages
      description: List messages
      parameters:
        - in: header
          name: wallet
          description: A unique string value identifying a wallet.
          required: false
          type: string
        - in: query
          name: type
          description: A single message type to filter by
          type: string
      tags:
        - message
    post:
      summary: Send message
      description: Send message
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/message_post'
      tags:
        - message
  /api/message/{messageId}:
    get:
      summary: Retrieve a message
      description: Retrieve a message
      parameters:
        - in: header
          name: wallet
          description: A unique string value identifying a wallet.
          required: false
          type: string
        - in: path
          name: messageId
          description: A unique string value identifying a message.
          required: true
          type: string
      tags:
        - message
    delete:
      summary: Delete a message
      description: Delete a message
      parameters:
        - in: header
          name: wallet
          description: A unique string value identifying a wallet.
          required: false
          type: string
        - in: path
          name: messageId
          description: A unique string value identifying a message.
          required: true
          type: string
      tags:
        - message
  /api/credential/:
    get:
      security:
        - Bearer: []
      summary: List all credentials of specific wallet (UNTESTED ENDPOINT)
      description: List all credentials of specific wallet (UNTESTED ENDPOINT)
      parameters:
        - in: header
          name: wallet
          description: A unique string value identifying a wallet.
          required: false
          type: string
        - in: query
          name: schema
          type: string
          description: schemaId to filter credentials
        - in: query
          name: schemaIssuerDid
          type: string
          description: schemaIssuerDid to filter credentials
        - in: query
          name: schemaName
          type: string
          description: schemaName to filter credentials
        - in: query
          name: schemaVersion
          type: string
          description: schemaVersion to filter credentials
        - in: query
          name: issuerDid
          type: string
          description: issuerDid to filter credentials
        - in: query
          name: credDefId
          type: string
          description: credDefId to filter credentials
      responses:
        '200':
          description: ''
      tags:
        - credential
    post:
      security:
        - Bearer: []
      summary: Store a credential
      description: Store a credential
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/credential_post'
      responses:
        '201':
          description: ''
      tags:
        - credential
  /api/credential/{id}:
    get:
      security:
        - Bearer: []
      parameters:
        - description: A unique string value identifying this credential.
          in: path
          name: id
          required: true
          type: string
        - in: header
          description: A unique string value identifying a wallet.
          name: wallet
          required: false
          type: string

      summary: Retrieve a credential
      description: Retrieve a credential
      responses:
        '200':
          description: ''
      tags:
        - credential
  /api/credentialissue:
    post:
      security:
        - Bearer: []
      summary: Issue a credential
      description: Issue a credential
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/credentialissue_post'
      responses:
        '201':
          description: ''
      tags:
        - credentialissue
  /api/credentialdef:
    parameters:
      - in: header
        name: wallet
        required: false
        type: string
    get:
      security:
        - Bearer: []
      summary: List credential definitions of wallet
      description: List credential definitions of wallet
      responses:
        '200':
          description: ''
      tags:
        - credentialdef
    post:
      security:
        - Bearer: []
      summary: Create a credential definition
      description: Create a credential definition
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/credentialdef_post'
      responses:
        '201':
          description: ''
      tags:
        - credentialdef
  /api/credentialdef/{creddef}:
    parameters:
      - description: A unique string value identifying this credential definition.
        in: path
        name: creddef
        required: true
        type: string
      - description: A unique string value identifying the wallet to be used.
        in: header
        name: wallet
        required: false
        type: string
    get:
      security:
        - Bearer: []
      summary: Retrieve a credential definition from the ledger
      description: Retrieve a credential definition from the ledger
      responses:
        '200':
          description: ''
      tags:
        - credentialdef
    delete:
      security:
        - Bearer: []
      summary: Delete a credential definition
      description: Delete a credential definition
      responses:
        '204':
          description: ''
      tags:
        - credentialdef
  /api/credentialoffer:
    post:
      security:
        - Bearer: []
      summary: Create a credential offer
      description: Create a credential offer
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/credentialoffer_post'
      responses:
        '201':
          description: ''
      tags:
        - credentialoffer
  /api/credentialrequest:
    post:
      security:
        - Bearer: []
      summary: Accept credential offer and create credential request
      description: Accept credential offer and create credential request
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/credentialrequest_post'
      responses:
        '201':
          description: ''
      tags:
        - credentialrequest
  /api/connectionoffer:
    get:
      security:
        - Bearer: []
      summary: List all my connection offers
      description: List all my connection offers
      parameters:
        - in: header
          description: A unique value identifying this wallet.
          name: wallet
          type: string
          required: false
      responses:
        '200':
          description: ''
      tags:
        - connection
    post:
      security:
        - Bearer: []
      summary: Create a new connection offer
      description: Create a new connection offer
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/connectionoffer_post'
      responses:
        '201':
          description: ''
      tags:
        - connection
  /api/connectionoffer/{connectionOfferId}:
    get:
      security:
        - Bearer: []
      summary: Retrieve a connection offer by _id
      description: Retrieve a connection offer by _id
      parameters:
        - in: header
          name: wallet
          description: A unique string value identifying a wallet.
          required: false
          type: string
        - in: path
          name: connectionOfferId
          description: connection offer _id
          type: string
          required: true
      responses:
        '200':
          description: ''
      tags:
        - connection
    delete:
      security:
        - Bearer: []
      summary: Delete a connection offer by _id
      description: Delete a connection offer by _id
      parameters:
        - in: header
          name: wallet
          description: A unique string value identifying a wallet.
          required: false
          type: string
        - in: path
          name: connectionOfferId
          description: connection offer _id
          type: string
          required: true
      responses:
        '204':
          description: ''
      tags:
        - connection
  /api/connectionrequest:
    get:
      security:
        - Bearer: []
      summary: List all my connection requests
      description: List all my connection requests
      parameters:
        - in: header
          description: A unique value identifying this wallet.
          name: wallet
          type: string
          required: false
      responses:
        '200':
          description: ''
      tags:
        - connection
    post:
      security:
        - Bearer: []
      summary: Accept a connection offer and/or send a connection request
      description: Accept a connection offer and/or send a connection request
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/connectionrequest_post'
      responses:
        '201':
          description: 'Success'
      tags:
        - connection
  /api/connectionrequest/{connectionRequestId}:
    get:
      security:
        - Bearer: []
      summary: Retrieve a connection request by _id
      description: Retrieve a connection request by _id
      parameters:
        - in: header
          name: wallet
          description: A unique string value identifying a wallet.
          required: false
          type: string
        - in: path
          name: connectionRequestId
          description: connection request _id
          type: string
          required: true
      responses:
        '200':
          description: ''
      tags:
        - connection
    delete:
      security:
        - Bearer: []
      summary: Delete a connection request by _id
      description: Delete a connection request by _id
      parameters:
        - in: header
          name: wallet
          description: A unique string value identifying a wallet.
          required: false
          type: string
        - in: path
          name: connectionRequestId
          description: connection request _id
          type: string
          required: true
      responses:
        '204':
          description: ''
      tags:
        - connection
  /api/connectionresponse:
    get:
      security:
        - Bearer: []
      summary: List all my connection responses
      description: List all my connection responses
      parameters:
        - in: header
          description: A unique value identifying this wallet.
          name: wallet
          type: string
          required: false
      responses:
        '200':
          description: ''
      tags:
        - connection
    post:
      security:
        - Bearer: []
      summary: Accept a connection request and send a connection response
      description: Accept a connection request and send a connection response
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/connectionresponse_post'
      responses:
        '201':
          description: 'Success'
      tags:
        - connection
  /api/connectionresponse/{connectionResponseId}:
    get:
      security:
        - Bearer: []
      summary: Retrieve a connection response by _id
      description: Retrieve a connection response by _id
      parameters:
        - in: header
          description: A unique value identifying this wallet.
          name: wallet
          type: string
          required: false
        - in: path
          name: connectionResponseId
          description: connection response _id
          type: string
          required: true
      responses:
        '200':
          description: ''
      tags:
        - connection
  /api/proofrequest:
    post:
      security:
        - Bearer: []
      summary: Create a proof request
      description: Create a proof request
      parameters:
        - in: body
          name: data
          type: object
          schema:
            $ref: '#/definitions/proofrequest_post'
      responses:
        '201':
          description: ''
      tags:
        - proof
  /api/proof:
    post:
      security:
        - Bearer: []
      summary: Create a Proof
      description: Create a Proof
      parameters:
        - in: body
          name: data
          type: object
          schema:
            $ref: '#/definitions/proof_post'
      responses:
        '201':
          description: ''
      tags:
        - proof
  /api/proofverification:
    post:
      security:
        - Bearer: []
      summary: Create a proof verification
      description: Create a proof verification
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/proofverification_post'
      responses:
        '200':
          description: ''
      tags:
        - proof
  /api/schema:
    get:
      security:
        - Bearer: []
      summary: List schemas
      description: List schemas
      responses:
        '200':
          description: ''
      tags:
        - schema
    post:
      security:
        - Bearer: []
      summary: Create a Schema
      description: Create a Schema
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/schema_post'
      responses:
        '201':
          description: ''
      tags:
        - schema
  /api/schema/{schemaid}:
    parameters:
      - description: A unique string value identifying this schema.
        in: path
        name: schemaid
        required: true
        type: string
      - description: A unique value identifying this wallet.
        in: header
        name: wallet
        required: false
        type: string
    get:
      security:
        - Bearer: []
      summary: Retrieve a schema
      description: Retrieve a schema
      responses:
        '200':
          description: ''
      tags:
        - schema
  /api/user:
    post:
      summary: Register a new user
      description: Register a new user
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/user_post'
      responses:
        '201':
          description: User successfully created
          schema:
            type: object
            properties:
              id:
                type: string
                description: Id of the new user
          headers:
            Location:
              description: Path to created user, e.g. /user/userId
              type: string
      tags:
        - user
  /api/user/{user}:
    parameters:
      - $ref: '#/parameters/userParam'
    get:
      security:
        - Bearer: []
      summary: Retrieve a user
      description: Retrieve a user
      responses:
        '200':
          description: 'Success'
      tags:
        - user
    put:
      security:
        - Bearer: []
      summary: Update a User
      description: Update a User (at least one of the properties must be provided)
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/user_put'
      responses:
        '200':
          description: 'Success'
        '501':
          description: 'Not yet implemented'
      tags:
        - user
    delete:
      security:
        - Bearer: []
      summary: Delete a User
      description: Delete a User
      parameters:
        - $ref: '#/parameters/userParam'
      responses:
        '204':
          description: ''
        '501':
          description: 'Not yet implemented'
      tags:
        - user
  /api/wallet:
    get:
      security:
        - Bearer: []
      summary: List all wallets of user
      description: List all wallets of user
      responses:
        '200':
          description: ''
      tags:
        - wallet
    post:
      security:
        - Bearer: []
      summary: Create a new Wallet (optionally with given name and settings)
      description: Create a new Wallet (optionally with given name and settings)
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/wallet_post'
      responses:
        '201':
          description: ''
      tags:
        - wallet
  /api/wallet/{wallet}:
    parameters:
      - $ref: '#/parameters/walletParam'
    get:
      security:
        - Bearer: []
      summary: Retrieve a Wallet.
      description: Retrieve a Wallet.
      responses:
        '200':
          description: ''
      tags:
        - wallet
    delete:
      security:
        - Bearer: []
      summary: Delete a Wallet
      description: Delete a Wallet
      responses:
        '204':
          description: ''
      tags:
        - wallet
  /api/endpoint:
    post:
      description: Agent endpoint
      summary: Agent endpoint
      parameters:
        - in: body
          name: data
          schema:
            properties:
              type:
                description: 'Message encryption type'
                type: string
                default: anon
                enum:
                  - anon
                  - auth
              target:
                description: 'Reason for the message'
                type: string
                enum:
                  - accept_connection
              ref:
                description: 'A reference value, e.g. nonce'
                type: string
              message:
                description: 'Encrypted message string'
                type: string
              signature:
                description: 'Message Signature'
                type: string
            required:
              - target
              - ref
              - message
              - signature
            type: object
      responses:
        '200':
          description: ''
      tags:
        - endpoint
  /api/transactions:
    get:
      security:
        - Bearer: []
      description: 'Get ledger transactions from-to indexes'
      parameters:
        - in: header
          name: wallet
          description: A unique string value identifying a wallet.
          required: false
          type: string
        - in: query
          name: from
          type: number
          description: Sequence Number of first transaction to query (greater than 0)
        - in: query
          name: to
          type: number
          description: Sequence Number of last transaction to query (greater than from index)
        - in: query
          name: type
          type: string
          description: 'Ledger Type: pool, domain, config. By default is DOMAIN'
      required:
        - from
        - to
      responses:
        '200':
          description: 'Returns list of transactions'
      tags:
        - transactions
