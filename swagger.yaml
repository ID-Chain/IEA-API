swagger: '2.0'
info:
  description: 'IdentityChain Agent REST API'
  title: IdentityChain API
  version: '0.1.5'
basePath: /api
schemes:
  - http
securityDefinitions:
  basic:
    type: basic
consumes:
  - application/json
produces:
  - application/json

parameters:
  userParam:
    name: user
    in: path
    description: A unique id (or 'me') value identifying this user.
    type: string
    required: true
  walletParam:
    name: wallet
    in: path
    description: A unique id value identifying this wallet.
    type: string
    required: true

definitions:
  users_post:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
      - username
      - password
  users_put:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  wallets_post:
    type: object
    properties:
      name:
        description: '(Optional) Wallet name, must be globally unique. Automatically generated if none is provided.'
        type: string
      config:
        description: '(Optional) Wallet Config JSON. Supported keys vary by wallet type. A default config will be used if none is provided.'
        type: string
      credentials:
        description: 'Wallet Credentials JSON. Supported keys vary by wallet type. A default config will be used if none is provided.'
        type: object
        properties:
          key:
            description: 'Passphrase used to derive wallet master key'
            type: string
      poolName:
        description: '(Optional) Name of the Pool to associate with this wallet. A default config will be used if none is provided.'
        type: string
      seed:
        description: '(Optional) Seed to use for initial did creation.'
        type: string
      xtype:
        description: '(Optional) Type of the wallet. A default config will be used if none is provided.'
        type: string
  credentials_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      encryptedCredential:
        description: The authcrypted credential offer id
        type: string
    required:
      - wallet
      - encryptedCredential
  credentials_issue_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      encryptedCredentialRequest:
        description: 'The authcrypted Credential Request'
        type: string
      values:
        description: Object containing attributes defined in schema as key-value pairs (e.g. {"attrName":"attrValue", "attrName1":"attrValue1"})
        type: object
    required:
      - wallet
      - encryptedCredentialRequest
  credentials_definitions_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      schemaId:
        description: A unique string value identifying a schema
        type: string
      supportRevocation:
        description: States if revocation should be supported for this credential definiton
        type: boolean
    required:
    - wallet
    - schemaId
  credentials_offers_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      recipientDid:
        description: 'DID for whom to create a credential offer'
        type: string
      credDefId:
        description: 'Credential definition id'
        type: string
    required:
      - wallet
      - recipientDid
      - credDefId
  credentials_requests_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      encryptedCredentialOffer:
        description: 'auth crypted credential offer'
        type: string
    required:
      - wallet
      - encryptedCredentialOffer
  connections_offers_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      endpoint:
        description: 'Response endpoint for connection response'
        type: string
      role:
        description: 'Role offered to the connection invitee'
        type: string
        enum:
          - NONE
          - TRUSTEE
          - STEWARD
          - TRUST_ANCHOR
    required:
      - wallet
  connections_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      endpoint:
        description: 'Endpoint for communication with accepting user'
        type: string
      connectionOffer:
        description: 'The connection offer object'
        type: object
    required:
      - wallet
      - connectionOffer
  proofs_requests_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      recipientDid:
        description: 'DID for whom to create a proof request'
        type: string
      proofRequest:
        description: proof request object (see https://github.com/hyperledger/indy-sdk/blob/master/doc/getting-started/getting-started.md#apply-for-a-job)
        type: object
        example:
          name: Ticket
          version: '0.1'
          requested_attributes:
            attr1_referent:
              name: firstname
              restrictions:
                - cred_def_id: XsjEewC463EYaXeQZcsWND:3:CL:19
            attr2_referent:
              name: lastname
              restrictions:
                - cred_def_id: XsjEewC463EYaXeQZcsWND:3:CL:19
            attr3_referent:
              name: phone
          requested_predicates: {}
    required:
      - wallet
      - recipientDid
      - proofRequest
  proofs_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      encryptedProofRequest:
        description: 'Encrypted Proof Request'
        type: string
      selfAttestedAttributes:
        description: (Optional) Object containing self-attested-attributes as key-value pairs
        type: object
        example:
          phone: '00001111'
    required:
      - wallet
      - encryptedProofRequest
  proofs_verifications_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      encryptedProof:
        description: 'Encrypted Proof'
        type: string
    required:
      - wallet
      - encryptedProof
  schemas_post:
    type: object
    properties:
      wallet:
        description: A unique string value identifying a wallet
        type: string
      name:
        description: A unique name of the schema
        type: string
      version:
        description: version for schema
        type: string
      attrNames:
        description: list of attribute names put into the schema
        type: array
        items:
          type: string
    required:
      - wallet
      - name
      - version
      - attrNames

paths:
  /credentials:
    get:
      summary: List all credentials of specific wallet (UNTESTED ENDPOINT)
      description: List all credentials of specific wallet (UNTESTED ENDPOINT)
      parameters:
        - in: header
          name: wallet
          description: A unique string value identifying a wallet.
          required: true
          type: string
        - in: query
          name: schema
          type: string
          description: schemaId to filter credentials
        - in: query
          name: schemaIssuerDid
          type: string
          description: schemaIssuerDid to filter credentials
        - in: query
          name: schemaName
          type: string
          description: schemaName to filter credentials
        - in: query
          name: schemaVersion
          type: string
          description: schemaVersion to filter credentials
        - in: query
          name: issuerDid
          type: string
          description: issuerDid to filter credentials
        - in: query
          name: credDefId
          type: string
          description: credDefId to filter credentials
      responses:
        '200':
          description: ''
      tags:
        - Credentials
      security:
        - basic
    post:
      summary: Store a credential
      description: Store a credential
      parameters:
      - in: body
        name: data
        schema:
          $ref: '#/definitions/credentials_post'
      responses:
        '201':
          description: ''
      tags:
        - Credentials
      security:
        - basic
  /credentials/{id}:
    parameters:
    - description: A unique string value identifying this credential.
      in: path
      name: id
      required: true
      type: string
    - in: header
      description: A unique string value identifying a wallet.
      name: wallet
      required: true
      type: string
    get:
      summary: Retrieve a credential
      description: Retrieve a credential
      responses:
        '200':
          description: ''
      tags:
        - Credentials
      security:
        - basic
  /credentials/issue:
      post:
        summary: Issue a credential
        description: Issue a credential
        parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/credentials_issue_post'
        responses:
          '201':
            description: ''
        tags:
          - Credentials
        security:
          - basic
  /credentials/definitions:
    get:
      summary: List credential definitions of wallet
      description: List credential definitions of wallet
      parameters:
        - in: header
          name: wallet
          required: true
          type: string
      responses:
        '200':
          description: ''
      tags:
        - Credentials
      security:
        - basic
    post:
      summary: Create a credential definition
      description: Create a credential definition
      parameters:
      - in: body
        name: data
        schema:
          $ref: '#/definitions/credentials_definitions_post'
      responses:
        '201':
          description: ''
      tags:
        - Credentials
      security:
        - basic
  /credentials/definitions/{creddef}:
    parameters:
      - description: A unique string value identifying this credential definition.
        in: path
        name: creddef
        required: true
        type: string
      - description: A unique string value identifying the wallet to be used.
        in: header
        name: wallet
        required: true
        type: string
    get:
      summary: Retrieve a credential definition from the ledger
      description: Retrieve a credential definition from the ledger
      responses:
        '200':
          description: ''
      tags:
        - Credentials
      security:
        - basic
    delete:
      summary: Delete a credential definition
      description: Delete a credential definition
      responses:
        '204':
          description: ''
      tags:
        - Credentials
      security:
        - basic
  /credentials/offers:
    post:
      summary: Create a credential offer
      description: Create a credential offer
      parameters:
        - in: body
          name: data
          schema:
            $ref: '#/definitions/credentials_offers_post'
      responses:
        '201':
          description: ''
      tags:
        - Credentials
      security:
        - basic
  /credentials/requests:
    post:
      summary: Accept credential offer and create credential request
      description: Accept credential offer and create credential request
      parameters:
      - in: body
        name: data
        schema:
          $ref: '#/definitions/credentials_requests_post'
      responses:
        '201':
          description: ''
      tags:
        - Credentials
      security:
        - basic
  /connections/offers:
    post:
      summary: Create a new connection offer
      description: Create a new connection offer
      parameters:
      - in: body
        name: data
        schema:
          $ref: '#/definitions/connections_offers_post'
      responses:
        '201':
          description: ''
      tags:
        - Connections
      security:
        - basic
  /connections:
    post:
      summary: Accept a connection offer
      description: Accept a connection offer
      parameters:
      - in: body
        name: data
        schema:
          $ref: '#/definitions/connections_post'
      responses:
        '200':
          description: 'Success'
      tags:
      - Connections
      security:
        - basic
  /proofs/requests:
    post:
      summary: Create a proof request
      description: Create a proof request
      parameters:
      - in: body
        name: data
        type: object
        schema:
          $ref: '#/definitions/proofs_requests_post'
      responses:
        '201':
          description: ''
      tags:
        - Proofs
      security:
        - basic
  /proofs:
    post:
      summary: Create a Proof
      description: Create a Proof
      parameters:
      - in: body
        name: data
        type: object
        schema:
          $ref: '#/definitions/proofs_post'
      responses:
        '201':
          description: ''
      tags:
        - Proofs
      security:
        - basic
  /proofs/verifications:
    post:
      summary: Create a proof verification
      description: Create a proof verification
      parameters:
      - in: body
        name: data
        schema:
          $ref: '#/definitions/proofs_verifications_post'
      responses:
        '200':
          description: ''
      tags:
        - Proofs
      security:
        - basic
  /schemas:
    get:
      summary: List schemas
      description: List schemas
      responses:
        '200':
          description: ''
      tags:
        - Schemas
      security:
        - basic
    post:
      summary: Create a Schema
      description: Create a Schema
      parameters:
      - in: body
        name: data
        schema:
          $ref: '#/definitions/schemas_post'
      responses:
        '201':
          description: ''
      tags:
        - Schemas
      security:
        - basic
  /schemas/{schemaid}:
    parameters:
      - description: A unique string value identifying this schema.
        in: path
        name: schemaid
        required: true
        type: string
      - description: A unique value identifying this wallet.
        in: header
        name: wallet
        required: true
        type: string
    get:
      summary: Retrieve a schema
      description: Retrieve a schema
      responses:
        '200':
          description: ''
      tags:
        - Schemas
      security:
        - basic
  /users:
    post:
      summary: Register a new user
      description: Register a new user
      parameters:
      - in: body
        name: data
        schema:
          $ref: '#/definitions/users_post'
      responses:
        '201':
          description: User successfully created
          headers:
            Location:
              description: Path to created user, e.g. /user/userId
              type: string
      tags:
        - Users
  /users/{user}:
    parameters:
      - $ref: '#/parameters/userParam'
    get:
      summary: Retrieve a user
      description: Retrieve a user
      responses:
        '200':
          description: 'Success'
      tags:
        - Users
      security:
        - basic
    put:
      summary: Update a User
      description: Update a User (at least one of the properties must be provided)
      parameters:
      - in: body
        name: data
        schema:
          $ref: '#/definitions/users_put'
      responses:
        '200':
          description: 'Success'
        '501':
          description: 'Not yet implemented'
      tags:
        - Users
      security:
        - basic
    delete:
      summary: Delete a User
      description: Delete a User
      parameters:
      - $ref: '#/parameters/userParam'
      responses:
        '204':
          description: ''
        '501':
          description: 'Not yet implemented'
      tags:
        - Users
      security:
        - basic
  /wallets:
    get:
      summary: List all wallets of user
      description: List all wallets of user
      responses:
        '200':
          description: ''
      tags:
        - Wallets
      security:
        - basic
    post:
      summary: Create a new Wallet (optionally with given name and settings)
      description: Create a new Wallet (optionally with given name and settings)
      parameters:
      - in: body
        name: data
        schema:
          $ref: '#/definitions/wallets_post'
      responses:
        '201':
          description: ''
      tags:
        - Wallets
      security:
        - basic
  /wallets/{wallet}:
    parameters:
      - $ref: '#/parameters/walletParam'
    get:
      summary: Retrieve a Wallet.
      description: Retrieve a Wallet.
      responses:
        '200':
          description: ''
      tags:
        - Wallets
      security:
        - basic
    delete:
      summary: Delete a Wallet
      description: Delete a Wallet
      responses:
        '204':
          description: ''
      tags:
      - Wallets
      security:
        - basic
  /endpoints:
    get:
      summary: Retrieve Agent Endpoint
      responses:
        '200':
          description: 'Success'
      tags:
        - Endpoints
      security:
        - basic
    post:
      description: Agent endpoint
      summary: Agent endpoint
      parameters:
      - in: body
        name: data
        schema:
          properties:
            type:
              description: 'Message encryption type'
              type: string
              default: anon
              enum:
              - anon
              - auth
            target:
              description: 'Reason for the message'
              type: string
              enum:
              - accept_connection
            ref:
              description: 'A reference value, e.g. nonce'
              type: string
            message:
              description: 'Encrypted message string'
              type: string
            signature:
              description: 'Message Signature'
              type: string
          required:
          - target
          - ref
          - message
          - signature
          type: object
      responses:
        '200':
          description: ''
      tags:
        - Endpoints
